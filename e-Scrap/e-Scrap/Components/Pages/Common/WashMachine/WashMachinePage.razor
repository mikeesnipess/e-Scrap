@page "/wash-machine"
@using AutoMapper
@using e_Scrap.Models
@using e_Scrap.Models.Common
@using e_crap.Models.Common.WashMachine
@inject HttpClient Http
@inject IHttpClientFactory HttpClientFactory
@inject IMapper mapper;
@inject IJSRuntime JS
@inject ProductPage<WashMachineModel> _getData

<ProductPage TProduct="WashMachineModel" Products="@WashMachineProducts" />


@code {
    private bool loading = true;
    private List<WashMachineModel> WashMachineProducts = new();

    protected override async Task OnInitializedAsync()
    {
        loading = true;
        var client = HttpClientFactory.CreateClient("API");
        WashMachineProducts = await GetAltexWashMachineProductAsync(client);
        WashMachineProducts.AddRange(await GetEMagWashMachine(client));
        WashMachineProducts.AddRange(await GetMediaGalaxyWashMachine(client));
        loading = false;
    }
   
    #region ShopsAPI

    protected async Task<List<WashMachineModel>> GetAltexWashMachineProductAsync(HttpClient client)
    {
        var endpoint = "api/altex/wash-machine";
        var products = await _getData.GetDataAsync<WashMachineModel>(client, endpoint);

        return products;
    }

    protected async Task<List<WashMachineModel>> GetEMagWashMachine(HttpClient client)
    {
        var endpoint = "api/emag/wash-machine";
        var products = await _getData.GetDataAsync<WashMachineModel>(client, endpoint);

        return products;
    }

    protected async Task<List<WashMachineModel>> GetMediaGalaxyWashMachine(HttpClient client)
    {
        var endpoint = "api/media-galaxy/wash-machine";
        var products = await _getData.GetDataAsync<WashMachineModel>(client, endpoint);

        return products;
    }

    #endregion
}
