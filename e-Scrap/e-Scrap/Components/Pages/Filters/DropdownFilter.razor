@typeparam T

<div>
    Set average price from Minimum:
    <input type="number" id="fromPrice" min="1" @bind-value="MinPrice" />
    to Maximum:
    <input type="number" id="toPrice" min="1" @bind-value="MaxPrice" />
    <input type="submit" value="Confirm" @onclick="ApplyPriceFilter" />
    <br />
    <select @onchange="e => OnSelectedBrandName.InvokeAsync(e.Value.ToString())">
        <option value="">All Brands</option>
        @foreach (var brand in BrandNameProducts)
        {
            <option value="@brand">@brand</option>
        }
    </select>

    <select @onchange="e => OnSelectedShopName.InvokeAsync(e.Value.ToString())">
        <option value="">All Shops</option>
        @foreach (var shop in ShopNames)
        {
            <option value="@shop">@shop</option>
        }
    </select>
    <label for="isDiscount">
        Show only Discount?
        <input type="checkbox" id="verifyActivity" @bind="IsOnlyDiscount" @bind:event="onchange" />
    </label>
</div>

@code {
    [Parameter]
    public List<string> BrandNameProducts { get; set; } = new();

    [Parameter]
    public List<string> ShopNames { get; set; } = new();

    [Parameter]
    public EventCallback<string> OnSelectedBrandName { get; set; }

    [Parameter]
    public EventCallback<string> OnSelectedShopName { get; set; }

    [Parameter]
    public EventCallback<int?> OnMinPriceChanged { get; set; }

    [Parameter]
    public EventCallback<int?> OnMaxPriceChanged { get; set; }

    [Parameter]
    public EventCallback<bool> IsOnlyDiscountActive { get; set; }

    private int? _minPrice;
    private int? _maxPrice;
    private bool _isOnlyDiscount;
    private int? MinPrice { get; set; }
    private int? MaxPrice { get; set; }

    // public int? MinPrice
    // {
    //     get => _minPrice;
    //     set
    //     {
    //         if (_minPrice != value)
    //         {
    //             _minPrice = value;
    //             OnMinPriceChanged.InvokeAsync(value);
    //         }
    //     }
    // }

    // public int? MaxPrice
    // {
    //     get => _maxPrice;
    //     set
    //     {
    //         if (_maxPrice != value)
    //         {
    //             _maxPrice = value;
    //             OnMaxPriceChanged.InvokeAsync(value);
    //         }
    //     }
    // }

    private bool IsOnlyDiscount
    {
        get => _isOnlyDiscount;
        set
        {
            if (_isOnlyDiscount != value)
            {
                _isOnlyDiscount = value;
                IsDiscountActive();
            }
        }
    }

    private async Task HandleBrandSelectionChanged(ChangeEventArgs e)
    {
        var selectedValue = e.Value?.ToString();
        await OnSelectedBrandName.InvokeAsync(selectedValue);
    }

    private async Task HandleShopSelectionChanged(ChangeEventArgs e)
    {
        var selectedValue = e.Value?.ToString();
        await OnSelectedShopName.InvokeAsync(selectedValue);
    }

    private async Task ApplyPriceFilter()
    {
        await OnMinPriceChanged.InvokeAsync(MinPrice);
        await OnMaxPriceChanged.InvokeAsync(MaxPrice);
    }

    private async Task IsDiscountActive()
    {
        await IsOnlyDiscountActive.InvokeAsync(IsOnlyDiscount);
    }

    

}
